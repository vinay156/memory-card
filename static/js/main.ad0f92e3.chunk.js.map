{"version":3,"sources":["component/list.js","app.js","index.js"],"names":["List","onclick","name","letter","className","onClick","App","useState","titles","setTitles","scoreArray","setScoreArray","score","setScore","bestScore","setBestScore","useEffect","clickedCard","e","arr","i","shuffleArray","a","b","c","l","length","Math","floor","random","shuffle","halfArray","push","editScoreArray","indexOf","map","el","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sMAYeA,EAVF,SAAC,GAA6B,IAA5BC,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,OAC1B,OACI,sBAAKC,UAAU,OAAOC,QAASJ,EAA/B,UACI,qBAAKG,UAAU,cAAf,SAA8BD,IAC9B,qBAAKC,UAAU,YAAf,SAA4BF,Q,MC8DzBI,MAhEf,WACE,MAA4BC,mBAAS,CAAC,CAAC,QAAS,UAAM,CAAC,OAAQ,UAAM,CAAC,QAAS,UAAM,CAAC,QAAS,UACzD,CAAC,UAAW,UAAM,CAAC,OAAQ,UAAO,CAAC,MAAO,UAAM,CAAC,QAAS,YADhG,mBAAOC,EAAP,KAAeC,EAAf,KAEA,EAAoCF,mBAAS,IAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KACA,EAA0BJ,mBAAS,GAAnC,mBAAOK,EAAP,KAAcC,EAAd,KACA,EAAkCN,mBAAS,GAA3C,mBAAOO,EAAP,KAAkBC,EAAlB,KAEAC,qBAAU,WACLJ,EAAQE,GACTC,EAAaH,KAEd,CAACA,EAAOE,IAEX,IAWMG,EAAc,SAACC,EAAGC,GACtB,IAMkBC,EANdC,EAZU,SAACF,GACf,IAAoBG,EAAEC,EAAEC,EAApBC,EAAIN,EAAIO,OACZ,IAAIJ,EAAE,EAAGA,EAAEG,EAAGH,IACZC,EAAII,KAAKC,MAAMD,KAAKE,SAAWJ,GAC/BD,EAAEL,EAAIG,GACNH,EAAIG,GAAGH,EAAII,GACXJ,EAAII,GAAGC,EAET,OAAOL,EAIYW,CAAQ,CAAC,CAAC,QAAS,UAAM,CAAC,OAAQ,UAAM,CAAC,QAAS,UAC3C,CAAC,QAAS,UAAM,CAAC,UAAW,UAAM,CAAC,OAAQ,UAC3C,CAAC,MAAO,UAAM,CAAC,QAAS,UAAO,CAAC,OAAQ,UACxC,CAAC,QAAS,UAAM,CAAC,SAAU,UAAM,CAAC,KAAM,UACxC,CAAC,OAAQ,KAAM,CAAC,OAAQ,KAAM,CAAC,SAAU,KACxC,CAAC,UAAW,OACnCC,EAAU,GACd,IAAIX,EAAE,EAAGA,EAAE,EAAGA,IACZW,EAAUC,KAAKX,EAAaD,IAG9BX,EAAUsB,GACV,IAAIE,EAAiBvB,GACkB,IAApCuB,EAAeC,QAAQf,EAAI,KAC5BN,EAASD,EAAM,GACfqB,EAAeD,KAAKb,EAAI,IACxBR,EAAcsB,KAEdpB,EAAS,GACTF,EAAc,MAIlB,OACE,sBAAKP,UAAU,MAAf,UACE,wBAAQA,UAAU,SAAlB,8BACA,+GACW,IAAVQ,EAAc,oBAAIR,UAAU,QAAd,4BAA4C,6BAC3D,yCAAYQ,KACZ,6CAAgBE,KAChB,qBAAKV,UAAU,oBAAf,SACGI,EAAO2B,KAAI,SAACC,GAAD,OACV,cAAC,EAAD,CAAMnC,QAAS,SAACiB,GAAMD,EAAYC,EAAGkB,IAAMlC,KAAMkC,EAAG,GAAIjC,OAAQiC,EAAG,cCxD7EC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.ad0f92e3.chunk.js","sourcesContent":["import React from 'react';\n\nconst List = ({onclick, name, letter}) => {\n    return (\n        <div className=\"card\" onClick={onclick}>\n            <div className=\"card-letter\">{letter}</div>\n            <div className=\"card-name\">{name}</div>\n        </div>\n\n    )\n}\n\nexport default List","import React, {useState, useEffect} from 'react'\nimport List from \"./component/list\"\nimport \"./styles.css\"\n\nfunction App() {\n  const [titles, setTitles] = useState([['Alpha', 'α'], ['Beta', 'β'], ['Gamma', 'γ'], ['Delta', 'δ'],\n                                        ['Epsilon', 'ε'], ['Zeta', 'ζ'],  ['Eta', 'η'], ['Theta', 'θ']]);\n  const [scoreArray, setScoreArray] = useState([]);\n  const [score, setScore] = useState(0);\n  const [bestScore, setBestScore] = useState(0);\n\n  useEffect(()=>{\n    if(score > bestScore){\n      setBestScore(score);\n    }\n  }, [score, bestScore])\n\n  const shuffle = (arr) => {\n    let l = arr.length, a,b,c;\n    for(a=0; a<l; a++){\n      b = Math.floor(Math.random() * l);\n      c=arr[a];\n      arr[a]=arr[b];\n      arr[b]=c;\n    }\n    return arr;\n  }\n\n  const clickedCard = (e, arr) => {\n    let shuffleArray = shuffle([['Alpha', 'α'], ['Beta', 'β'], ['Gamma', 'γ'],\n                              ['Delta', 'δ'], ['Epsilon', 'ε'], ['Zeta', 'ζ'],\n                              ['Eta', 'η'], ['Theta', 'θ'],  ['Iota', 'ι'],\n                              ['Kappa', 'κ'], ['Lambda', 'λ'], ['Mu', 'μ'],\n                              ['Heat', 'Q'], ['Mass', 'm'], ['Length', 'l'],\n                               ['Breadth', 'b']]);\n    let halfArray=[], i;\n    for(i=0; i<8; i++){\n      halfArray.push(shuffleArray[i]);\n    }\n    \n    setTitles(halfArray);\n    let editScoreArray = scoreArray;\n    if(editScoreArray.indexOf(arr[0]) === -1){\n      setScore(score+1);\n      editScoreArray.push(arr[0]);\n      setScoreArray(editScoreArray);\n    }else{\n      setScore(0);\n      setScoreArray([]);\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"header\">Memory Card Game</header>\n      <h3>Get points by clicking on a different card that you haven't clicked before !!</h3>\n      {score === 0 ? <h2 className=\"start\">Start the Game</h2> : <></>}\n      <h4>Score: {score}</h4>\n      <h4>BestScore: {bestScore}</h4>\n      <div className=\"content-container\">\n        {titles.map((el) => \n          <List onclick={(e)=> {clickedCard(e, el)}} name={el[0]} letter={el[1]} />\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}